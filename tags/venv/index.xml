<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>venv on Try to write anyway</title>
    <link>http://geeksaga.com/tags/venv/</link>
    <description>Recent content in venv on Try to write anyway</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Dec 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://geeksaga.com/tags/venv/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>파이썬3 가상환경(venv) 설정</title>
      <link>http://geeksaga.com/post/python/2016-12-16-python3-venv-setting/</link>
      <pubDate>Fri, 16 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://geeksaga.com/post/python/2016-12-16-python3-venv-setting/</guid>
      <description>Python virtualenv 를 사용하는 기본적인 목적은 프로젝트 별로 필요한 환경을 만들기 위해 사용한다.
virtualenv 설정 하기 Linux 계열 환경에서 Python3 이 설치 되어있을 경우 가상환경 설정은 다음과 같은 순서로 진행한다. 설정은 사용자 홈 디렉토리 밑에 설정하는 것으로 한다.
$&amp;gt; cd ~ $&amp;gt; mkdir dev_env $&amp;gt; python3 -m venv dev_env 설치된 가상환경을 이용하려면 해당 가상환경을 활성화해야 한다.
$&amp;gt; source ~/dev_env/bin/activate 가상환경을 종료하려면 가상머신을 비활성화 한다.
$&amp;gt; source ~/dev_env/bin/deactivate vritualenv 활용  virtualenv 환경에 설치된 package 목록 가져오기  $&amp;gt; pip freeze &amp;gt; requirements.</description>
    </item>
    
  </channel>
</rss>
